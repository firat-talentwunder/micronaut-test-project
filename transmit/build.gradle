import com.amazonaws.services.lambda.model.Runtime
import jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath "jp.classmethod.aws:gradle-aws-plugin:0.38"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    }
}

apply plugin: "io.spring.dependency-management"
apply from: '../gradle/lambda.gradle'
apply plugin: 'jp.classmethod.aws.lambda'

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.479'
    }
}

dependencies {
    compile 'com.amazonaws:aws-java-sdk-s3'
    compile "io.micronaut:micronaut-http-client"
}

task deployLambda(type: AWSLambdaMigrateFunctionTask, dependsOn: build, group: 'deploy') {
    functionName = 'pipedrive-service-transmit'
    handler = 'com.agorapulse.micronaut.agp.ApiGatewayProxyHandler::handleRequest'
    role = "arn:aws:iam::518986006376:role/pipedrive_integration_s3"
    runtime = Runtime.Java8
    zipFile = buildZip.archivePath
    memorySize = 512
    timeout = 60
}

aws {
    profileName = "default"
    region = "eu-central-1"
}

lambda {
    region = "eu-central-1"
}
